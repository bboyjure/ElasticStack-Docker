# https://github.com/elastic/beats/blob/master/metricbeat/metricbeat.reference.yml

#-------------------------------- Autodiscovery -------------------------------
# Autodiscover allows you to detect changes in the system and spawn new modules as they happen.
metricbeat.autodiscover:
  providers:
    - type: docker
      # https://www.elastic.co/guide/en/beats/metricbeat/current/configuration-autodiscover-hints.html
      hints.enabled: true

metricbeat.modules:
#------------------------------- System Module -------------------------------
- module: system
  metricsets: [
    "cpu", 
    "load", 
    "memory", 
    "network", 
    "process", 
    "process_summary", 
    "core", 
    "diskio", 
    "socket"
  ]
  processes: ['.*']
  process.include_top_n:
    by_cpu: 5
    by_memory: 5
  period: 10s
  cpu.metrics:  ["percentages"]
  core.metrics: ["percentages"]

- module: system
  period: 1m
  metricsets:
    - filesystem
    - fsstat
  processors:
  - drop_event.when.regexp:
      system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'

- module: system
  period: 15m
  metricsets:
    - uptime

#------------------------------- Docker Module -------------------------------
- module: docker
  metricsets: ["container", "cpu", "diskio", "healthcheck", "info", "memory", "network"]
  hosts: ["unix:///var/run/docker.sock"]
  period: 10s

#================================ Processors ===================================
# processors:
# - add_cloud_metadata: ~
# - add_docker_metadata: ~
# - add_locale:
#     format: offset
# - add_host_metadata:
#     netinfo.enabled: true

#------------------------------ PostgreSQL Module ------------------------------
- module: postgresql
  enabled: true
  metricsets:
    # Stats about every PostgreSQL database
    - database
    # Stats about the background writer process's activity
    - bgwriter
    # Stats about every PostgreSQL process
    - activity
    # Stats about every statement executed in the server. It requires the
    # `pg_stats_statement` library to be configured in the server.
    #- statement
  period: 10s
  # The host must be passed as PostgreSQL URL. Example:
  # postgres://localhost:5432?sslmode=disable
  # The available parameters are documented here:
  # https://godoc.org/github.com/lib/pq#hdr-Connection_String_Parameters
  hosts: ["postgres://192.168.0.138:5432/fleetS?sslmode=disable"]
  # Username to use when connecting to PostgreSQL. Empty by default.
  username: fleet
  # Password to use when connecting to PostgreSQL. Empty by default.
  password: opti



#========================== Elasticsearch output ===============================
output.elasticsearch:
  hosts: ["http://elasticsearch01:9200","http://elasticsearch02:9200","http://elasticsearch03:9200"]
  username: $ELASTICSEARCH_USERNAME
  password: $ELASTICSEARCH_PASSWORD

#========================== Logstash output ===============================
# output.logstash:
#   hosts: ["logstash:5044"]

# output.elasticsearch.index: "filebeat-%{[agent.version]}-%{+yyyy.MM.dd}"
# setup.template.name: "filebeat"
# setup.template.pattern: "filebeat-*"

#============================== Dashboards =====================================
setup.dashboards:
  enabled: true

#============================== Kibana =========================================
setup.kibana:
  host:  "http://kibana:5601"
  username: $ELASTICSEARCH_USERNAME
  password: $ELASTICSEARCH_PASSWORD

#============================== Xpack Monitoring ===============================
xpack.monitoring:
  enabled: true
  elasticsearch:
